@page "/scriptures"
@inject HttpClient Http

<div class="slider"></div><!-- slider -->

<section class="blog-area section">
	<div class="container">

		<div class="row">

			@if (quotes == null)
			{
				<p><em>Finding the holes in the narrative...</em></p>
			}
			else
			{
				@foreach (var quote in quotes)
				{
					<div class="col-lg-4 col-md-6">
						<div class="card h-100">

							<div class="single-post post-style-2 post-style-3">

								<div class="blog-info">

									<h6 class="pre-title"><a href="@quote.url" target="blank"><b>@quote.type</b></a></h6>

									<h4 class="title"><a href="@quote.url" target="blank"><b>@quote.ref1</b></a></h4>

									<p>@quote.text</p>
									
									@foreach (var keyword in quote.keywords)
									{
										@if(keyword != "dummy")
										{
											<h6 class="date">@keydict[keyword]</h6>
										}
									}

									<div class="avatar-area">
										<a class="avatar" href="@quote.url"><img src="images/icons8-team-355979.jpg" alt="Profile Image"></a>
										<div class="right-area">
											<a class="name" href="@quote.url" target="blank"><b>@quote.ref1</b></a>
											<h6 class="date">@quote.ref2</h6>
											<h6 class="date">@quote.ref3</h6>
										</div>
									</div>
 									<ul class="post-footer">
										<li><a href="#"><i class="ion-heart"></i></a></li>
										<li><a href="#"><i class="ion-chatbubble"></i></a></li>
										<li><a href="#"><i class="ion-eye"></i></a></li>
									</ul> 
<!-- 									<ul class="post-footer">
										<li><a href="#"><i class="ion-heart"></i>57</a></li>
										<li><a href="#"><i class="ion-chatbubble"></i>6</a></li>
										<li><a href="#"><i class="ion-eye"></i>138</a></li>
									</ul> -->

								</div><!-- blog-right -->

							</div><!-- single-post extra-blog -->

						</div><!-- card -->
					</div><!-- col-lg-4 col-md-6 -->
				}
			}

		</div><!-- row -->
	</div><!-- container -->
</section><!-- section -->

@code {
    private Quote[] quotes;
	private KeyValue[] keywordlist;
	private Dictionary<string, string> keydict = new Dictionary<string, string>();

    protected override async Task OnInitializedAsync()
    {
        quotes = await Http.GetFromJsonAsync<Quote[]>("data/data.json");
		
		foreach (var quote in quotes){
			quote.ref1=quote.ref1.Split(':')[1].Trim();
			quote.ref2=quote.ref2.Split(':')[1].Trim();
			quote.ref3=quote.ref3.Split(':')[1].Trim();
			if(quote.text.Length>500) quote.text=quote.text.Substring(0, 500)+"...";
		}
		
		keywordlist = await Http.GetFromJsonAsync<KeyValue[]>("data/keywords.json");
		
		foreach (var keypair in keywordlist){
			keydict.Add(keypair.key, keypair.value);
		}
    }

    public class Quote
    {
        public string text { get; set; }
        public string type { get; set; }
        public string url { get; set; }
		public string[] keywords { get; set; }
        public string ref1 { get; set; }
        public string ref2 { get; set; }
        public string ref3 { get; set; }
    }
	
    public class KeyValue
    {
        public string key { get; set; }
        public string value { get; set; }
    }
}
